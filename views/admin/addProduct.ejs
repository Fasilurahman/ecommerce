<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Add Product</title>

  <!-- Bootstrap CSS -->
  <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet"/>

  <!-- CropperJS CSS -->
  <link href="https://unpkg.com/cropperjs@1.5.12/dist/cropper.min.css" rel="stylesheet"/>

  <!-- SweetAlert2 CSS -->
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css"/>

  <style>
    #image-preview-container canvas {
      max-width: 100%;
      border: 1px solid #ccc;
      margin-top: 10px;
    }
    #image-to-crop {
      max-width: 100%;
    }
  </style>
</head>
<body>
  <div class="container mt-4">
    <h2>Add Product</h2>
    <form id="add-product-form" action="/admin/addProduct" method="POST" enctype="multipart/form-data">

      <!-- Product Info -->
      <div class="form-group">
        <label for="name">Product Name</label>
        <input type="text" name="name" id="name" class="form-control" required />
      </div>

      <div class="form-group">
        <label for="category">Category</label>
        <select name="category" id="category" class="form-control" required>
          <option value="">select</option>
          <% categories.forEach(category => { %>
            <option value="<%= category._id %>"><%= category.name %></option>
          <% }) %>
        </select>
      </div>

      <div class="form-group">
        <label for="description">Description</label>
        <textarea name="description" id="description" class="form-control" rows="4" required></textarea>
      </div>

      <div class="form-group">
        <label for="brand">Brand</label>
        <select name="brand" id="brand" class="form-control" required>
          <option value="">select</option>
          <% brands.forEach(brand => { %>
            <option value="<%= brand._id %>"><%= brand.brandName %></option>
          <% }) %>
        </select>
      </div>

      <!-- Variants -->
      <div id="variants-section">
        <h4>Variants</h4>
        <div class="variant-group">
          <div class="form-group">
            <label>Quantity</label>
            <input type="text" name="variants[0][quantity]" class="form-control" required />
          </div>
          <div class="form-group">
            <label>Price</label>
            <input type="number" name="variants[0][price]" class="form-control" step="0.01" min="0" required />
          </div>
          <div class="form-group">
            <label>Stock</label>
            <input type="number" name="variants[0][stock]" class="form-control" min="0" required />
          </div>
        </div>
      </div>

      <!-- Image Inputs -->
      <div class="form-group">
        <label>Product Images (4 total)</label>
        <div class="row">
          <% for (let i = 0; i < 4; i++) { %>
          <div class="col-md-3 mb-3">
            <input type="file" class="form-control image-input" data-index="<%= i %>" accept="image/*" required />
            <canvas id="preview-canvas-<%= i %>" width="200" height="200" style="display:none;"></canvas>
          </div>
          <% } %>
        </div>
      </div>

      <button type="submit" class="btn btn-success">Add Product</button>
    </form>
  </div>

  <!-- Cropper Modal -->
  <div class="modal fade" id="cropperModal" tabindex="-1" role="dialog">
    <div class="modal-dialog modal-lg" role="document">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title">Crop Image</h5>
          <button type="button" class="close" data-dismiss="modal" aria-label="Close">
            <span>&times;</span>
          </button>
        </div>
        <div class="modal-body text-center">
          <img id="image-to-crop" />
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-primary" id="crop-button">Crop</button>
        </div>
      </div>
    </div>
  </div>

  <!-- Scripts -->
  <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
  <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.bundle.min.js"></script>
  <script src="https://unpkg.com/cropperjs@1.5.12/dist/cropper.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

  <script>
    let cropper;
    let currentImageIndex = null;
    const croppedImages = {};

    document.querySelectorAll('.image-input').forEach(input => {
      input.addEventListener('change', function () {
        const file = this.files[0];
        currentImageIndex = this.dataset.index;

        if (file && ['image/jpeg', 'image/png'].includes(file.type)) {
          const reader = new FileReader();
          reader.onload = function (e) {
            const image = document.getElementById('image-to-crop');
            image.src = e.target.result;
            $('#cropperModal').modal('show');
          };
          reader.readAsDataURL(file);
        } else {
          Swal.fire('Invalid file', 'Only JPEG and PNG files are allowed.', 'error');
        }
      });
    });

    $('#cropperModal').on('shown.bs.modal', function () {
      cropper = new Cropper(document.getElementById('image-to-crop'), {
        aspectRatio: 1,
        viewMode: 1
      });
    }).on('hidden.bs.modal', function () {
      if (cropper) cropper.destroy();
      cropper = null;
    });

    document.getElementById('crop-button').addEventListener('click', function () {
      const canvas = cropper.getCroppedCanvas({ width: 500, height: 500 });

      canvas.toBlob(blob => {
        croppedImages[currentImageIndex] = blob;

        const previewCanvas = document.getElementById(`preview-canvas-${currentImageIndex}`);
        const ctx = previewCanvas.getContext('2d');
        previewCanvas.style.display = 'block';
        ctx.clearRect(0, 0, previewCanvas.width, previewCanvas.height);
        ctx.drawImage(canvas, 0, 0, previewCanvas.width, previewCanvas.height);

        $('#cropperModal').modal('hide');
      }, 'image/jpeg');
    });

    document.getElementById('add-product-form').addEventListener('submit', function (e) {
      e.preventDefault();

      const productName = document.getElementById('name').value.trim();
      const category = document.getElementById('category').value;
      const description = document.getElementById('description').value.trim();
      const brand = document.getElementById('brand').value;
      const variants = document.querySelectorAll('.variant-group');

      let isValid = true;
      let errorMessage = '';

      if (productName.length < 3 || productName.length > 100) {
        isValid = false;
        errorMessage = 'Product name must be between 3 and 100 characters.';
      }

      if (!category || !brand) {
        isValid = false;
        errorMessage = 'Please select a valid category and brand.';
      }

      variants.forEach(variant => {
        const price = variant.querySelector('input[name*="price"]').value;
        const stock = variant.querySelector('input[name*="stock"]').value;

        if (!price || isNaN(price) || price <= 0) {
          isValid = false;
          errorMessage = 'Each variant must have a valid positive price.';
        }

        if (!stock || isNaN(stock) || stock < 0) {
          isValid = false;
          errorMessage = 'Each variant must have a valid stock number.';
        }
      });

      if (Object.keys(croppedImages).length !== 4) {
        isValid = false;
        errorMessage = 'Please upload and crop exactly 4 images.';
      }

      if (!isValid) {
        Swal.fire('Validation Error', errorMessage, 'error');
        return;
      }

      const formData = new FormData(this);
      Object.keys(croppedImages).forEach(index => {
        formData.append('images', croppedImages[index], `image_${index}.jpg`);
      });

      fetch(this.action, {
        method: 'POST',
        body: formData
      })
      .then(res => res.json())
      .then(data => {
        if (data.success) {
          Swal.fire('Success', data.message, 'success').then(() => {
            window.location.href = '/admin/products';
          });
        } else {
          Swal.fire('Error', data.message, 'error');
        }
      })
      .catch(() => {
        Swal.fire('Error', 'An unexpected error occurred.', 'error');
      });
    });
  </script>
</body>
</html>
